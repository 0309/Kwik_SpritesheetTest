-- Code created by Kwik - Copyright: kwiksher.com -- Version: 2.7.6a module(..., package.seeall) function new()     local numPages = 1     local menuGroup = display.newGroup()     local dispose     local _W = display.contentWidth;     local _H = display.contentHeight;     local drawScreen = function()        local curPage = 1        if (tonumber(kBookmark) == 1) then           local path = system.pathForFile( "book.txt", system.DocumentsDirectory )           local file = io.open( path, "w+" )           file:write ( curPage.."\n1" )           io.close( file )        end        math.randomseed(os.time())        if (tonumber(_G.kAutoPlay) > 0) then           local function act_autoPlay(event)              if(curPage < numPages) then                 if(kBidi == false) then                     dispose(); director:changeScene( "page_"..curPage+1, "moveFromRight" )                 else                     dispose(); director:changeScene( "page_"..curPage-1, "moveFromLeft" )                 end               end           end           timerStash.timer_AP = timer.performWithDelay( _G.kAutoPlay*1000, act_autoPlay, 1 )        end         -- Layer names        local Layer_1         local Rectangle_1         -- (TOP) External code will render here        -- Layer_1 positioning        Layer_1 = display.newImageRect( imgDir.. "p1_layer_1.png", 640, 960 );        Layer_1.x = 320; Layer_1.y = 480; Layer_1.alpha = 1; Layer_1.oldAlpha = 1        Layer_1.oriX = Layer_1.x; Layer_1.oriY = Layer_1.y        Layer_1.name = "Layer_1"        menuGroup:insert(1,Layer_1); menuGroup.Layer_1 = Layer_1        -- Rectangle_1 positioning        local Rectangle_1_options = {            -- created with TexturePacker (http://www.texturepacker.com)           frames = {                            { x=230, y=230, width=226, height=226 }, -- masu_1               { x=230, y=2, width=226, height=226 }, -- masu_2               { x=2, y=230, width=226, height=226 }, -- masu_3               { x=2, y=2, width=226, height=226 }, -- masu_4           },               sheetContentWidth = 512,           sheetContentHeight = 512        }        Rectangle_1_sheet = graphics.newImageSheet( spriteDir.. "spritesheet.png", Rectangle_1_options )        Rectangle_1_seq = { name = "default", start = 1, count = 4, time = 1000, loopCount = 0, loopDirection = "bounce" };        Rectangle_1 = display.newSprite(Rectangle_1_sheet, Rectangle_1_seq )        Rectangle_1:play();        Rectangle_1.x = 320; Rectangle_1.y = 616; Rectangle_1.alpha = 1; Rectangle_1.oldAlpha = 1        Rectangle_1.oriX = Rectangle_1.x; Rectangle_1.oriY = Rectangle_1.y        Rectangle_1.name = "Rectangle_1"        menuGroup:insert(Rectangle_1); menuGroup.Rectangle_1 = Rectangle_1         -- Group(s) creation        -- (MIDDLE) External code will render here        -- swipe this page with spacer of 120 in normal direction        Gesture.activate( Layer_1, {swipeLength=120} )        local function pageSwap(event )          if event.phase == "ended" and event.direction ~= nil then              local wPage = curPage              local direction              if event.direction == "left" and kBidi == false then                 wPage = curPage + 1                 if wPage > numPages then wPage = curPage end                 direction = "moveFromRight"              elseif event.direction == "left" and kBidi == true then                 wPage = curPage - 1                 if wPage < tonumber(initPage) then wPage = initPage end                 direction = "moveFromLeft"              elseif event.direction == "right" and kBidi == true then                 wPage = curPage + 1                 if wPage > numPages then wPage = curPage end                 direction = "moveFromRight"              elseif event.direction == "right" and kBidi == false then                 wPage = curPage - 1                 if wPage < tonumber(initPage) then wPage = initPage end                 direction = "moveFromLeft"              end              if tonumber(wPage) ~= tonumber(curPage) then dispose();                dispose(); director:changeScene("page_"..wPage, direction)             end          end         end        Layer_1:addEventListener( Gesture.SWIPE_EVENT, pageSwap )        dispose = function(event)           cancelAllTimers(); cancelAllTransitions()           Layer_1:removeEventListener( Gesture.SWIPE_EVENT, pageSwap ); Gesture.deactivate(Layer_1)        end        function cleanSprite()            Rectangle_1_sheet = nil; Rectangle_1 = nil         end        -- (BOTTOM) External code will render here     end     drawScreen()     function clean()        cleanSprite()     end     return menuGroup end 